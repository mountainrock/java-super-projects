package designPatterns.gof.creational.builder;

/**
 * The class <code>Director</code> manages Product creation using Builder.
 * 
 * @pattern Builder (role=directorType)
 * 
 * @generatedBy CodePro at 12/4/07 7:04 PM
 * 
 * @author Sandeep.Maloth
 * 
 * @version $Revision$
 */
public class Director {

	/**
	 * Reference to Builder currently used
	 */
	private Builder builder;

	/**
	 * Create a new <code>Director</code> instance.
	 * 
	 * @param builder the builder which will create the product
	 */
	public Director(Builder builder) {
		this.builder = builder;
	}

	/**
	 * Construct the Product using the Builder.
	 */
	public void construct()
	{
		builder.buildPart();
	}
}

/*
 * $CPS$ This comment was generated by CodePro. Do not edit it. patternId = com.instantiations.assist.eclipse.pattern.builderPattern strategyId =
 * com.instantiations.assist.eclipse.pattern.builderPattern.builder abstract = false builderField = builder builderInterface = Builder buildPartMethod = buildPart constructMethod = construct
 * createBuilders = true createClients = true directorClass = Director final = false getProductMethod = getProduct package = designPatterns.gof.creational.builder package.sourceFolder =
 * coreJavaExamples/src productInterface = Product productList = public = true superclassType = java.lang.Object
 */