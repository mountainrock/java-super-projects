package designPatterns.gof.creational.builder;

/**
 * The interface <code>Product</code> defines a complex object that is constructed part-by-part with Builder.
 * 
 * @pattern Builder (role=productType)
 * 
 * @generatedBy CodePro at 12/4/07 7:04 PM
 * 
 * @author Sandeep.Maloth
 * 
 * @version $Revision$
 */
public interface Product {
}

/*
 * $CPS$ This comment was generated by CodePro. Do not edit it. patternId = com.instantiations.assist.eclipse.pattern.builderPattern strategyId =
 * com.instantiations.assist.eclipse.pattern.builderPattern.builder abstract = false builderField = builder builderInterface = Builder buildPartMethod = buildPart constructMethod = construct
 * createBuilders = true createClients = true directorClass = Director final = false getProductMethod = getProduct package = designPatterns.gof.creational.builder package.sourceFolder =
 * coreJavaExamples/src productInterface = Product productList = public = true superclassType = java.lang.Object
 */